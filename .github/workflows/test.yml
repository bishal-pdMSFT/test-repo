name: test

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    name: runner-cache upload (${{ matrix.os }})
    steps:
    - uses: actions/checkout@v3
    - name: Create file to cache
      shell: bash
      run: |
        mkdir test-cache
        echo "foo" > test-cache/test.txt
        ln -s test-cache/test.txt test-cache/link.txt
        tar --posix -cf cache.tzst --exclude cache.tzst -P test-cache --use-compress-program zstdmt
        tar -tf cache.tzst -P --use-compress-program zstdmt
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-runner-${{ github.run_number }}-${{ github.run_attempt }}
        path: cache.tzst

  restore:
    needs: upload
    strategy:
      matrix:
        os: [windows-latest]
        key: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: runner-cache restore (${{ matrix.os }}) with key (${{ matrix.key }})
    steps:
    - uses: actions/checkout@v3
    - if: ${{ runner.os == 'Windows' }}
      shell: bash
      run: |
        #export MSYS=winsymlinks:nativestrict
        #rm "C:\Program Files\Git\usr\bin\tar.exe"
    - uses: actions/download-artifact@v3
      id: cache
      with:
        name: ${{ matrix.key }}-runner-${{ github.run_number }}-${{ github.run_attempt }}
      #env:
      #  MSYS: winsymlinks:nativestrict

    - shell: bash
      run: |
        ls
        "C:\Program Files\Git\usr\bin\tar.exe" -xf cache.tzst -P --force-local --dereference --use-compress-program "zstd -d" # should not fail
        du -sh test-cache
        ls -la test-cache/
        rm -rf test-cache
      #env:
      #  MSYS: winsymlinks:nativestrict
